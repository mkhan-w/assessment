services:
  # PostgreSQL Database Service
  postgres:
    image: postgres:15-alpine
    container_name: school_mgmt_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: school_mgmt
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      # Mount seed files for database initialization
      - ./seed_db/tables.sql:/docker-entrypoint-initdb.d/01-tables.sql
      - ./seed_db/seed-db.sql:/docker-entrypoint-initdb.d/02-seed-db.sql
      # Persist database data
      - postgres_data:/var/lib/postgresql/data
    networks:
      - school_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d school_mgmt"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: school_mgmt_backend
    restart: unless-stopped
    ports:
      - "5007:5007"
    environment:
      # Database Configuration
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_NAME: school_mgmt
      DATABASE_USER: postgres
      DATABASE_PASSWORD: postgres
      
      # Application Configuration
      NODE_ENV: development
      PORT: 5007
      
      # JWT Configuration
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      JWT_REFRESH_SECRET: your-super-secret-refresh-key-change-this-in-production
      
      # CORS Configuration
      FRONTEND_URL: http://localhost:5173
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - school_network
    volumes:
      # Mount backend code for development hot-reload
      - ./backend:/app
      - /app/node_modules

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: school_mgmt_frontend
    restart: unless-stopped
    ports:
      - "5173:5173"
    environment:
      # Backend API URL
      VITE_API_URL: http://localhost:5007/api/v1
    depends_on:
      - backend
    networks:
      - school_network
    volumes:
      # Mount frontend code for development hot-reload
      - ./frontend:/app
      - /app/node_modules
    stdin_open: true
    tty: true

networks:
  school_network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
